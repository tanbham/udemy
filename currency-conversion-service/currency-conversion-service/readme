Currency Conversion Microservice --> Gives back the conversion of USD to INR for the quantity given, 
it will first call the Currency Exchange Microservice 
to check the current exchange rate and then execute its functionality


https://start.spring.io  --> to create a spring project
Dependency choosen :
Spring Web
DevTools
Actuator 
Config Client

URL
http://localhost:8100/currency-conversion/from/USD/to/INR/quantity/10
Response Structure
{
  "id": 10001,
  "from": "USD",
  "to": "INR",
  "conversionMultiple": 65.00,
  "quantity": 10,
  "totalCalculatedAmount": 650.00,
  "environment": "8000 instance-id"
}

In order to call the Currency Exchange Microservice we needed to write 20+ lines of code
Hence Spring gives us FEIGN REST Client for service invocation
- added dependency "spring-cloud-openfeign" in currecny conversion service pom.xml
- create an interface in currecny-conversion-service (I-CurrecnyExchangeProxy)
- add annotation @EnableFeignClients over SpringApplication class
- check the method "calculateCurrencyConversionFeign" which has now less lines of code
- https://localhost:8100/currency-conversion-feign/from/USD/to/INR/quantity/10

In CurrecnyExchangeProxy Interface we are hardcoding the value url="localhost:8000"
What if in future there are new instances? We need to come back and add the instances in variable url.
What is the solution? ==> Service Registry or Naming Server
All the MicroServices will be looking for the active intances of other MicroServices from the Naming Server or Service Registry
CurrecnyExhchangeMicroService	CurrecnyConversionMicroService	MicroServiceX	MicrServiceY
	\                             \                               /                  /
	 \							   \                             /                  /
	  \ 							\                           /                  /
	  							Naming Server (Service Registry)

https://start.spring.io  --> to create a Naming Server (Eureka Server)
Dependency choosen :
Spring Boot DevTools
Spring Boot Actuator
Eureka
	  							
